user www-data www-data;
worker_processes 8;
worker_rlimit_nofile 65535;
# worker_cpu_affinity 0001 0010 0100 1000;
error_log ${_NGINX_LOG}/error.log  crit;
pid       ${_NGINX_PID};

events
{
    use epoll;
    worker_connections 65535;
}

http
{
    include ${_NGINX_ETC}/mime_types;
    include ${_NGINX_ETC}/fastcgi_params;
    include ${_NGINX_ETC}/block_list;
    index  index.php index.html index.htm;

    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    server_names_hash_bucket_size 128;
    access_log  ${_NGINX_LOG}/access.log main;

    sendfile       on;
    tcp_nopush     on;
    tcp_nodelay    on;
    keepalive_timeout 30;

    client_header_buffer_size 32k;
    large_client_header_buffers 64 32k;
    client_max_body_size 128m;


    gzip  on;
    gzip_comp_level 2;
    gzip_proxied any;
    gzip_min_length  1k;
    gzip_buffers     64 32k;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";


    #    fastcgi_cache_path /var/lib/nginx/tmp/fastcgi_cache levels=1:2 keys_zone=TEST:128m inactive=15m max_size=1g;
    #    fastcgi_cache TEST;
    #    fastcgi_cache_valid 200 302 1h;
    #    fastcgi_cache_valid 301 1d;
    #    fastcgi_cache_valid any 1m;
    #    fastcgi_cache_min_uses 1;
    #    fastcgi_cache_use_stale error timeout invalid_header http_500;

    open_file_cache max=204800 inactive=15m;
    open_file_cache_min_uses 1;
    open_file_cache_valid 30s;
    #    fastcgi_cache_key http://$host$request_uri;





    # An intentional default site/page to avoid random unintended defaults :)
    server {
        listen 80 default;
        server_name _;
        server_name_in_redirect off;
        root  ${_WWW}/_default/public_html;
        access_log off; # We really don't need to log these...
        include ${_NGINX_ETC}/includes/serve_static;
        include ${_NGINX_ETC}/includes/serve_php;
    }

    # Load our virtual hosts: BAM!
    include ${_NGINX_ETC}/sites-enabled/*;
}
