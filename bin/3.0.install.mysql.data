#!/bin/bash
source ${0%/*}/config.sh

echo ========================================

rm ${mysql_data} -ri

echo 创建 mysql 数据库存放目录
mkdir -p ${mysql_data}/${mysql_port}/data/
mkdir -p ${mysql_data}/${mysql_port}/binlog/
mkdir -p ${mysql_data}/${mysql_port}/relaylog/
chown -R mysql:mysql ${mysql_data}/

echo 以mysql用户帐号的身份建立数据表：
${mysql_install}/bin/mysql_install_db --basedir=${mysql_install} --datadir=${mysql_data}/${mysql_port}/data --user=mysql

echo 创建my.cnf配置文件：
cat <<EOF > ${mysql_data}/${mysql_port}/my.cnf
[client]
character-set-server = utf8
port = ${mysql_port}
socket= /tmp/mysql.sock

[mysqld]
skip-networking
character-set-server = utf8
replicate-ignore-db = mysql
replicate-ignore-db = test
replicate-ignore-db = information_schema
user = mysql
port = ${mysql_port}
socket= /tmp/mysql.sock
basedir = ${mysql_install}
datadir = ${mysql_data}/${mysql_port}/data
log-error = ${mysql_data}/${mysql_port}/mysql_error.log
pid-file = ${mysql_data}/${mysql_port}/mysql.pid
open_files_limit= 10240
back_log = 600
max_connections = 5000
max_connect_errors = 6000
table_cache = 614
external-locking = FALSE
max_allowed_packet = 32M
sort_buffer_size = 1M
join_buffer_size = 1M
thread_cache_size = 300
#thread_concurrency = 8
query_cache_size = 512M
query_cache_limit = 2M
query_cache_min_res_unit = 2k
default-storage-engine = MyISAM
thread_stack = 192K
transaction_isolation = READ-COMMITTED
tmp_table_size = 246M
max_heap_table_size = 246M
long_query_time = 3
log-slave-updates
log-bin = ${mysql_data}/${mysql_port}/binlog/binlog
binlog_cache_size = 4M
binlog_format = MIXED
max_binlog_cache_size = 8M
max_binlog_size = 1G
relay-log-index = ${mysql_data}/${mysql_port}/relaylog/relaylog
relay-log-info-file = ${mysql_data}/${mysql_port}/relaylog/relaylog
relay-log = ${mysql_data}/${mysql_port}/relaylog/relaylog
expire_logs_days = 30
key_buffer_size = 256M
read_buffer_size = 1M
read_rnd_buffer_size = 16M
bulk_insert_buffer_size = 64M
myisam_sort_buffer_size = 128M
myisam_max_sort_file_size = 10G
myisam_repair_threads = 1
myisam_recover

interactive_timeout = 120
wait_timeout = 120

skip-name-resolve
#master-connect-retry = 10
slave-skip-errors = 1032,1062,126,1114,1146,1048,1396

#master-host = 192.168.1.2
#master-user = username
#master-password = password
#master-port = ${mysql_port}

server-id = 1

innodb_additional_mem_pool_size = 16M
innodb_buffer_pool_size = 512M
innodb_data_file_path = ibdata1:256M:autoextend
innodb_file_io_threads = 4
innodb_thread_concurrency = 8
innodb_flush_log_at_trx_commit = 2
innodb_log_buffer_size = 16M
innodb_log_file_size = 128M
innodb_log_files_in_group = 3
innodb_max_dirty_pages_pct = 90
innodb_lock_wait_timeout = 120
innodb_file_per_table = 0

#log-slow-queries = ${mysql_data}/${mysql_port}/slow.log
#long_query_time = 10

[mysqldump]
quick
max_allowed_packet = 32M
EOF


echo 创建管理MySQL数据库的shell脚本：

cat <<EOF > ${mysql_data}/${mysql_port}/mysql
#!/bin/bash
mysql_install=${mysql_install}
mysql_data=${mysql_data}
mysql_port=${mysql_port}
mysql_username=${mysql_username}
mysql_password=${mysql_password}

EOF
cat <<'EOF' >> ${mysql_data}/${mysql_port}/mysql
function_start_mysql()
{
    printf "Starting MySQL...\n"
    /bin/sh ${mysql_install}/bin/mysqld_safe --defaults-file=${mysql_data}/${mysql_port}/my.cnf 2>&1 > /dev/null &
}

function_stop_mysql()
{
    printf "Stoping MySQL...\n"
    ${mysql_install}/bin/mysqladmin -u ${mysql_username} -p${mysql_password} -S /tmp/mysql.sock shutdown
}

function_restart_mysql()
{
    printf "Restarting MySQL...\n"
    function_stop_mysql
    sleep 5
    function_start_mysql
}

function_kill_mysql()
{
    kill -9 $(ps -ef | grep 'bin/mysqld_safe' | grep ${mysql_port} | awk '{printf $2}')
    kill -9 $(ps -ef | grep 'libexec/mysqld' | grep ${mysql_port} | awk '{printf $2}')
}

if [ "$1" = "start" ]; then
    function_start_mysql
elif [ "$1" = "stop" ]; then
    function_stop_mysql
elif [ "$1" = "restart" ]; then
    function_restart_mysql
elif [ "$1" = "kill" ]; then
    function_kill_mysql
else
    printf "Usage: ${mysql_data}/${mysql_port}/mysql {start|stop|restart|kill}\n"
fi
EOF

echo 赋予shell脚本可执行权限：
chmod +x ${mysql_data}/${mysql_port}/mysql

echo 启动MySQL：
${mysql_data}/${mysql_port}/mysql start
